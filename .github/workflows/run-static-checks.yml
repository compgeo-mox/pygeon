# Adapted from PorePy
# Run static tests for code quality: Isort, ruff (formatting and linting), mypy.

name: Static tests

# Controls when the action will run. Triggers the workflow on push or pull request
# events for the main and develop branches
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # Do a nightly run of the tests
    - cron: '0 1 * * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Static tests
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#specifying-a-python-version
    strategy:
      matrix:
        # Run the tests only on the latest supported Python version.
        python-version:  ["3.13"]
      # Complete all versions in matrix even if one fails.
      fail-fast: false

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
    - uses: actions/checkout@v4

    - name: Setup Python ${{ matrix.python-version}}
      uses: actions/setup-python@v5
      with:
        # Version range or exact version of a Python version to use, using SemVer's version range syntax.
        python-version: ${{ matrix.python-version}}
        architecture: x64
        cache: 'pip'

    # # Cache pip dependencies
    # # Source: https://github.com/actions/cache/blob/main/examples.md#python---pip
    # - name: Cache dependencies
    #   uses: actions/cache@v4
    #   id: cache
    #   with:
    #     # Cache the full python environment, this is more efficient than just caching pip
    #     # https://blog.allenai.org/python-caching-in-github-actions-e9452698e98d
    #     path: ${{ env.pythonLocation }}
    #     key: ${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}

    - name: Cache mypy
      uses: actions/cache@v4
      id: cache-mypy
      with:
        path: mypy-cache-${{ matrix.python-version}}
        key: ${{ runner.os }}-mypy

    # Make sure pip is up to date.
    - name: Upgrade pip
      run: |
        pip cache purge
        python -m pip install -U pip
        pip --version

    # Install the requirements. Mypy needs this to access stubs for numpy etc.
    - name: Install requirements
      run: |
        pip install -U pip
        pip install --upgrade --upgrade-strategy eager --force-reinstall -e .
        pip freeze

    # Run the various checks
    - name: Ruff linting
      if: ${{ always() }}
      run: ruff check src tests

    - name: Ruff formatting
      if: ${{always()}}
      run: ruff format --check src tests

    - name: isort
      if: ${{always()}}
      run: isort --check src

    - name: mypy
      if: ${{ always() }}
      run: mypy src tests --cache-dir mypy-cache-${{ matrix.python-version}}

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        slug: compgeo-mox/pygeon
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
